# Multi-Cloud Development Environment
version: '3.8'

services:
  # Core AI Assistant API
  ai-assistant-api:
    build:
      context: ./src/api
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=mysql://admin:password@mysql:3306/ai_assistant
      - REDIS_URL=redis://redis:6379
      - OPENSEARCH_URL=http://opensearch:9200
      - AWS_ENDPOINT_URL=http://localstack:4566
    volumes:
      - ./src/api:/app
      - /app/node_modules
    depends_on:
      - mysql
      - redis
      - opensearch
      - localstack

  # Document Processing Service
  document-processor:
    build:
      context: ./src/document-processor
      dockerfile: Dockerfile
    environment:
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
      - S3_ENDPOINT=http://localstack:4566
      - OPENSEARCH_URL=http://opensearch:9200
    volumes:
      - ./src/document-processor:/app
      - /app/node_modules
    depends_on:
      - rabbitmq
      - opensearch
      - localstack

  # Web Frontend
  frontend:
    build:
      context: ./src/frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - REACT_APP_AUTH_DOMAIN=localhost
    volumes:
      - ./src/frontend:/app
      - /app/node_modules

  # Local Database (MySQL)
  mysql:
    image: mysql:8.0
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=rootpassword
      - MYSQL_DATABASE=ai_assistant
      - MYSQL_USER=admin
      - MYSQL_PASSWORD=password
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/init:/docker-entrypoint-initdb.d

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  # OpenSearch for Vector Storage
  opensearch:
    image: opensearchproject/opensearch:2.3.0
    ports:
      - "9200:9200"
      - "9600:9600"
    environment:
      - discovery.type=single-node
      - OPENSEARCH_INITIAL_ADMIN_PASSWORD=AdminPassword123!
      - DISABLE_SECURITY_PLUGIN=true
    volumes:
      - opensearch_data:/usr/share/opensearch/data

  # Message Queue
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  # LocalStack for AWS Services Emulation
  localstack:
    image: localstack/localstack:3
    ports:
      - "4566:4566"
    environment:
      - DEBUG=1
      - SERVICES=s3,secretsmanager,iam,lambda,transcribe
      - DATA_DIR=/tmp/localstack/data
    volumes:
      - localstack_data:/tmp/localstack
      - /var/run/docker.sock:/var/run/docker.sock

  # Monitoring with Prometheus
  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus

  # Grafana for Dashboards
  grafana:
    image: grafana/grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources

volumes:
  mysql_data:
  redis_data:
  opensearch_data:
  rabbitmq_data:
  localstack_data:
  prometheus_data:
  grafana_data:

networks:
  default:
    name: ai-assistant-network